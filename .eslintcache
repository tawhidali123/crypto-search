[{"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/index.js":"1","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/App.js":"2","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppLayout.js":"3","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppBar.js":"4","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppProvider.js":"5","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/WelcomeMessage.js":"6","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/ConfirmButton.js":"7","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/indexSettings.js":"8","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Page.js":"9","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Content.js":"10","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinGrid.js":"11","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Style.js":"12","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Tile.js":"13","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinTile.js":"14","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinHeaderGrid.js":"15","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/CoinImage.js":"16","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/Search.js":"17","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/indexDashboard.js":"18","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceGrid.js":"19","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceTile.js":"20","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/CoinSpotlight.js":"21","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceChart.js":"22","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/HighchartsConfig.js":"23","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/HighchartsTheme.js":"24","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/ChartSelect.js":"25"},{"size":534,"mtime":1609887721262,"results":"26","hashOfConfig":"27"},{"size":550,"mtime":1610927298903,"results":"28","hashOfConfig":"27"},{"size":115,"mtime":1609181088177,"results":"29","hashOfConfig":"27"},{"size":1388,"mtime":1611098419316,"results":"30","hashOfConfig":"27"},{"size":4641,"mtime":1611370919754,"results":"31","hashOfConfig":"27"},{"size":355,"mtime":1609887721258,"results":"32","hashOfConfig":"27"},{"size":929,"mtime":1610483326078,"results":"33","hashOfConfig":"27"},{"size":469,"mtime":1610765291016,"results":"34","hashOfConfig":"27"},{"size":423,"mtime":1609887721261,"results":"35","hashOfConfig":"27"},{"size":601,"mtime":1610829927864,"results":"36","hashOfConfig":"27"},{"size":1242,"mtime":1610830436823,"results":"37","hashOfConfig":"27"},{"size":1135,"mtime":1610420671342,"results":"38","hashOfConfig":"27"},{"size":568,"mtime":1610576250787,"results":"39","hashOfConfig":"27"},{"size":1524,"mtime":1610593640250,"results":"40","hashOfConfig":"27"},{"size":834,"mtime":1610577076291,"results":"41","hashOfConfig":"27"},{"size":480,"mtime":1611017071132,"results":"42","hashOfConfig":"27"},{"size":1891,"mtime":1611072939140,"results":"43","hashOfConfig":"27"},{"size":617,"mtime":1611020947362,"results":"44","hashOfConfig":"27"},{"size":854,"mtime":1611098582866,"results":"45","hashOfConfig":"27"},{"size":2760,"mtime":1611090909045,"results":"46","hashOfConfig":"27"},{"size":699,"mtime":1611016761269,"results":"47","hashOfConfig":"27"},{"size":1276,"mtime":1611370823056,"results":"48","hashOfConfig":"27"},{"size":908,"mtime":1611095864530,"results":"49","hashOfConfig":"27"},{"size":6801,"mtime":1611024232361,"results":"50","hashOfConfig":"27"},{"size":255,"mtime":1611370879503,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"vb0b6u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/index.js",[],["109","110"],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/App.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppLayout.js",["111"],"import React from 'react'\nimport styled from 'styled-components'\n\nexport default styled.div `\n    padding: 40px;\n`\n","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppBar.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/AppProvider.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/WelcomeMessage.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/ConfirmButton.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/indexSettings.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Page.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Content.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinGrid.js",["112","113"],"import React from 'react'\nimport {AppContext} from '../AppProvider'\nimport styled from 'styled-components'\nimport CoinTile from './CoinTile'\n\nconst CoinGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    grid-gap: 15px;\n    margin-top: 43.5px;\n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins) {\n    return( filteredCoins && Object.keys(filteredCoins) || Object.keys(coinList).slice(0,100) )\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filteredCoins) {\n    return topSection ? favorites : getLowerSectionCoins(coinList, filteredCoins);\n}\n\nexport default function CoinGrid({topSection}) {\n    return (\n        <AppContext.Consumer>\n            {\n                ({coinList, favorites, filteredCoins}) => (\n                    <CoinGridStyled>\n                        {\n                            getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey => {\n                                return <CoinTile key={coinKey} coinKey={coinKey} topSection={topSection} />\n                            })\n                        }\n                    </CoinGridStyled>\n                )\n            }\n        </AppContext.Consumer>\n    )\n}\n","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Style.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/Tile.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinTile.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/CoinHeaderGrid.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Shared/CoinImage.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Settings/Search.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/indexDashboard.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceGrid.js",["114"],"import { price } from 'cryptocompare'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {AppContext} from '../AppProvider'\nimport PriceTile from './PriceTile'\n\nconst PriceGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 15px;\n    margin-top: 40px;\n`\n\nexport default function PriceGrid() {\n    return (\n        <div>\n            <AppContext.Consumer>\n                {\n                    ({prices}) => (\n                        <PriceGridStyled>\n                            {prices.map((price, index) => (\n                                <PriceTile key={`priceTile-${index}`} index={index} price={price} />\n                            ))}\n                        </PriceGridStyled>\n                    )\n                }\n            </AppContext.Consumer>\n        </div>\n    )\n}\n","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceTile.js",["115"],"import React from 'react'\nimport styled, {css} from 'styled-components'\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid'\nimport { fontSize3, fontSizeBig, greenBoxShadow } from '../Shared/Style'\nimport {SelectableTile} from '../Shared/Tile'\nimport {AppContext} from '../AppProvider'\n\nconst JustifyRight = styled.div`\n    justify-self: right;\n`\nconst JustifyLeft = styled.div`\n    justify-self: left;\n`\n\nconst TickerPrice = styled.div`\n    ${fontSizeBig}\n`\n\nconst ChangePctStyled = styled.div`\n    color: green;\n    ${props => props.red && css`\n        color: red;\n    `}\n`\n\nconst PriceTileStyled = styled(SelectableTile)`\n    ${props => props.compact && css`\n        display: grid;\n        ${fontSize3};\n        grid-gap: 7.5px;\n        grid-template-columns: repeat(3, 1fr);\n        justify-items: right;\n    `}\n\n    ${props => props.currentFavorite && css`\n        ${greenBoxShadow};\n        pointer-events: none;\n    `}\n`\n\nconst numberFormat = number => {\n    return +(number + '').slice(0, 7)\n}\n\n\nfunction ChangePercent({data}) {\n    return (\n        <JustifyRight>\n            <ChangePctStyled red={data.CHANGEPCT24HOUR < 0}>\n                {numberFormat(data.CHANGEPCT24HOUR)}% \n            </ChangePctStyled>\n        </JustifyRight>\n    )\n}\n\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}) {\n    return (\n        <PriceTileStyled currentFavorite={currentFavorite} onClick={setCurrentFavorite}>\n            <CoinHeaderGridStyled>\n                <div> {sym} </div>\n                <ChangePercent data={data} />\n            </CoinHeaderGridStyled>\n            <TickerPrice>\n                ${numberFormat(data.PRICE)}\n            </TickerPrice>\n        </PriceTileStyled>\n    )\n}\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}) {\n    return (\n        <PriceTileStyled compact currentFavorite={currentFavorite} onClick={setCurrentFavorite}>\n            <JustifyLeft> {sym} </JustifyLeft>\n            <ChangePercent data={data} />\n            <div>\n                ${numberFormat(data.PRICE)}\n            </div>\n        </PriceTileStyled>\n    )\n}\n\n\nexport default function({price, index}) {\n\n    let sym = Object.keys(price)[0]\n    let data = price[sym]['USD']\n    let TileClass = index < 5 ? PriceTile : PriceTileCompact\n\n    return (\n        <AppContext.Consumer>\n            {\n                ({currentFavorite, setCurrentFavorite}) => (\n                    <TileClass \n                        sym={sym} \n                        data={data} \n                        currentFavorite={currentFavorite === sym} \n                        setCurrentFavorite={() => setCurrentFavorite(sym)}\n                    />\n                )\n            }\n        </AppContext.Consumer>\n        \n    )\n}\n","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/CoinSpotlight.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/PriceChart.js",[],"/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/HighchartsConfig.js",["116"],"export default (historical) => {\n    return {\n        title: {\n            text: ''\n        },\n    \n        yAxis: {\n            title: {\n                text: 'Price'\n            }\n        },\n    \n        xAxis: {\n            type: 'datetime',\n        },\n    \n        legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n        },\n    \n        plotOptions: {\n        series: {\n            label: {\n            connectorAllowed: false\n            },\n            pointStart: 2010\n        }\n        },\n    \n        series: historical,\n    \n        responsive: {\n        rules: [{\n            condition: {\n            maxWidth: 500\n            },\n            chartOptions: {\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom'\n            }\n            }\n        }]\n        }\n    \n    }\n}","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/HighchartsTheme.js",["117"],"export default () => {\n    return {\n        colors: [\n            '#A4F809', \n            '#10C856', \n            '#4210C8',\n            '#1592a7',\n            '#a0accb',\n            '#33f9ba',\n            '#160a64',\n        ],\n        chart: {\n            backgroundColor: '#061a44',\n            borderColor: '#000000',\n            borderWidth: 0,\n            className: 'dark-container',\n            plotBackgroundColor: '#061a44',\n            plotBorderWidth: 0\n        },\n        title: {\n            style: {\n                color: '#C0C0C0',\n                font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n            }\n        },\n        subtitle: {\n            style: {\n                color: '#666666',\n                font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n            }\n        },\n        xAxis: {\n            gridLineColor: '#333333',\n            gridLineWidth: 0,\n            labels: {\n                style: {\n                    color: '#A0A0A0'\n                }\n            },\n            lineColor: '#A0A0A0',\n            tickColor: '#A0A0A0',\n            title: {\n                style: {\n                    color: '#CCC',\n                    fontWeight: 'bold',\n                    fontSize: '12px',\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n                }\n            }\n        },\n        yAxis: {\n            gridLineColor: '#333333',\n            gridLineWidth: 0,\n            labels: {\n                style: {\n                    color: '#A0A0A0'\n                }\n            },\n            lineColor: '#A0A0A0',\n            minorTickInterval: null,\n            tickColor: '#A0A0A0',\n            tickWidth: 1,\n            title: {\n                style: {\n                    color: '#CCC',\n                    fontWeight: 'bold',\n                    fontSize: '12px',\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n                }\n            }\n        },\n        tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.75)',\n            style: {\n                color: '#F0F0F0'\n            }\n        },\n        toolbar: {\n            itemStyle: {\n                color: 'silver'\n            }\n        },\n        plotOptions: {\n            line: {\n                dataLabels: {\n                    color: '#CCC'\n                },\n                marker: {\n                    lineColor: '#333'\n                }\n            },\n            spline: {\n                marker: {\n                    lineColor: '#333'\n                }\n            },\n            scatter: {\n                marker: {\n                    lineColor: '#333'\n                }\n            },\n            candlestick: {\n                lineColor: 'white'\n            }\n        },\n        legend: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            itemStyle: {\n                font: '9pt Trebuchet MS, Verdana, sans-serif',\n                color: '#A0A0A0'\n            },\n            itemHoverStyle: {\n                color: '#FFF'\n            },\n            itemHiddenStyle: {\n                color: '#444'\n            },\n            title: {\n                style: {\n                    color: '#C0C0C0'\n                }\n            }\n        },\n        credits: {\n            enabled: false\n        },\n        labels: {\n            style: {\n                color: '#CCC'\n            }\n        },\n        navigation: {\n            buttonOptions: {\n                symbolStroke: '#DDDDDD',\n                theme: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.4, '#606060'],\n                            [0.6, '#333333']\n                        ]\n                    },\n                    stroke: '#000000'\n                }\n            }\n        },\n        // scroll charts\n        rangeSelector: {\n            buttonTheme: {\n                fill: {\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                    stops: [\n                        [0.4, '#888'],\n                        [0.6, '#555']\n                    ]\n                },\n                stroke: '#000000',\n                style: {\n                    color: '#CCC',\n                    fontWeight: 'bold'\n                },\n                states: {\n                    hover: {\n                        fill: {\n                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                            stops: [\n                                [0.4, '#BBB'],\n                                [0.6, '#888']\n                            ]\n                        },\n                        stroke: '#000000',\n                        style: {\n                            color: 'white'\n                        }\n                    },\n                    select: {\n                        fill: {\n                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                            stops: [\n                                [0.1, '#000'],\n                                [0.3, '#333']\n                            ]\n                        },\n                        stroke: '#000000',\n                        style: {\n                            color: 'yellow'\n                        }\n                    }\n                }\n            },\n            inputStyle: {\n                backgroundColor: '#333',\n                color: 'silver'\n            },\n            labelStyle: {\n                color: 'silver'\n            }\n        },\n        navigator: {\n            handles: {\n                backgroundColor: '#666',\n                borderColor: '#AAA'\n            },\n            outlineColor: '#CCC',\n            maskFill: 'rgba(16, 16, 16, 0.5)',\n            series: {\n                color: '#7798BF',\n                lineColor: '#A6C7ED'\n            }\n        },\n        scrollbar: {\n            barBackgroundColor: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0.4, '#888'],\n                    [0.6, '#555']\n                ]\n            },\n            barBorderColor: '#CCC',\n            buttonArrowColor: '#CCC',\n            buttonBackgroundColor: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0.4, '#888'],\n                    [0.6, '#555']\n                ]\n            },\n            buttonBorderColor: '#CCC',\n            rifleColor: '#FFF',\n            trackBackgroundColor: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0, '#000'],\n                    [1, '#333']\n                ]\n            },\n            trackBorderColor: '#666'\n        }\n    }\n}","/Users/tawhid/Desktop/Coding Projects/crypto-dash/crypto-dash/src/Dashboard/ChartSelect.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":14,"column":27,"nodeType":"128","messageId":"129","endLine":14,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":14,"column":57,"nodeType":"128","messageId":"129","endLine":14,"endColumn":59},{"ruleId":"122","severity":1,"message":"130","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":83,"column":1,"nodeType":"133","endLine":104,"endColumn":2},{"ruleId":"131","severity":1,"message":"134","line":1,"column":1,"nodeType":"133","endLine":50,"endColumn":2},{"ruleId":"131","severity":1,"message":"134","line":1,"column":1,"nodeType":"133","endLine":240,"endColumn":2},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'price' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]